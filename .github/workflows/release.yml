name: Release
on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: Build docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Check version
        id: check-version
        run: |
          local_nginx_version=$(grep -oE 'ENV NGINX_VERSION=[0-9.]*' Dockerfile | cut -d= -f2)
          local_njs_version=$(grep -oE 'ENV NJS_VERSION=[0-9.]*' Dockerfile | cut -d= -f2)
          echo "NGINX_VERSION=$local_nginx_version" >> $GITHUB_OUTPUT
          echo "NJS_VERSION=$local_njs_version" >> $GITHUB_OUTPUT

      - name: Log into the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.check-version.outputs.NGINX_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.check-version.outputs.NGINX_VERSION }}-v${{ steps.check-version.outputs.NJS_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
